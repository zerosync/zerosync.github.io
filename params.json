{"name":"ZeroSync","tagline":"effortless, simple file syncing","body":"ZeroSync is a student project taking place during the semester 13/14 at the University of Applied Science in Wiesbaden, Germany.\r\n\r\n## ZeroSync in a Hundred Words\r\n\r\nZeroSync aims to combine features of Dropbox, Owncloud, Sparkleshare, BitTorrent Sync and other cloud sync products. Providing rapid file synchronization ranging from small to super large files. Additional features include version control, secure peer to peer communication, simple user management and one time access. The overall goal should be *zero effort* and *simplicity* for the user. Another goal for the far future is to add a Dropbox like Datastore API.\r\nZeroSync is LGPLv3 open source.\r\n\r\n## Motivation\r\n\r\nDuring the winter break in January 2013 I (@sappo) finally had some time to build my own private cloud. I needed an easy to setup, comfortable to use solution with version control that would run on my raspberry pi.\r\nAt first I tried owncloud. The especially rich feature set of this project really excited me. After doing lots of optimization on my pi starting from overclocking, reducing the memory footprint to pushing php to it's edge and more, I still was stuck with an incredible slow syncing process. It would take almost 45 minutes to sync 300 files on my local LAN. Next I tried Sparkleshare. It has proven itself as stable and I even used it for a couple of weeks with fellow students. By using git under the hood it offers a popular version control system. The problem with, rolling back changes is a really laborious process and it's just not optimized for handling large files. When BitTorrent Sync hit the web later 2013 I was amazed by the ease of use. With the peer to peer features I knew from BitTorrent and it's great discovery functionality it's currently my preferred solution. Even thought BitTorrent isn't open source and is also missing a version control.\r\nAs none of the above mentioned project offered a real solution to my problem I started the idea of ZeroSync.\r\n\r\n## Project goals\r\n\r\nDuring the project we're developing different components, which are listed below\r\n\r\n* **Core library** to handle peer to peer communication and file transfer\r\n* **File sync client** for Linux (Mac and Windows)\r\n* **File sync server** which provides version control\r\n* **Web App Interface** for administrative tasks, browsing and downloading the files\r\n* **Android/iOS Client** with partial sync e.g. for music or videos\r\n\r\nThe core library will be entirely written in C due to performance reasons. **All other components can be implemented in any language you like.**\r\n\r\n## Interested?\r\n\r\nCheck out the component projects and their wiki\r\n\r\n* Core library [libzs](libzs.zerosync.org) [wiki](libzs.zerosync.org/wiki)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}